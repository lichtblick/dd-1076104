affinity: {}
annotations: {}
autoscaling:
  enabled: true
  maxReplicas: 10
  minReplicas: 2
  targetCPUUtilizationPercentage: 80
clusterRole:
  annotations: {}
  clusterRoleBinding:
    annotations: {}
    name: ""
  create: false
  name: ""
  rules: []
command:
  extraArgs: []
  name: otelcol-contrib
config:
  exporters:
    datadog:
      api:
        key: ${env:DD_API_KEY}
        site: datadoghq.eu
    logging: {}
  extensions:
    health_check: {}
    memory_ballast: {}
  processors:
    batch: {}
    k8sattributes:
      extract:
        labels:
        - key_regex: tags.datadoghq.com/(.*)
          tag_name: $$1
        metadata:
        - k8s.pod.name
        - k8s.pod.uid
        - k8s.deployment.name
        - k8s.node.name
        - k8s.namespace.name
        - k8s.pod.start_time
        - k8s.replicaset.name
        - k8s.replicaset.uid
        - k8s.daemonset.name
        - k8s.daemonset.uid
        - k8s.job.name
        - k8s.job.uid
        - k8s.cronjob.name
        - k8s.statefulset.name
        - k8s.statefulset.uid
        - container.image.name
        - container.image.tag
      passthrough: false
      pod_association:
      - sources:
        - from: resource_attribute
          name: k8s.pod.ip
      - sources:
        - from: resource_attribute
          name: k8s.pod.uid
    memory_limiter: null
  receivers:
    jaeger:
      protocols:
        grpc:
          endpoint: ${MY_POD_IP}:14250
        thrift_compact:
          endpoint: ${MY_POD_IP}:6831
        thrift_http:
          endpoint: ${MY_POD_IP}:14268
    otlp:
      protocols:
        grpc:
          endpoint: ${MY_POD_IP}:4317
        http:
          endpoint: ${MY_POD_IP}:4318
    prometheus:
      config:
        scrape_configs:
        - job_name: opentelemetry-collector
          scrape_interval: 10s
          static_configs:
          - targets:
            - ${MY_POD_IP}:8888
    zipkin:
      endpoint: ${MY_POD_IP}:9411
  service:
    extensions:
    - health_check
    - memory_ballast
    pipelines:
      logs:
        exporters:
        - logging
        processors:
        - memory_limiter
        - batch
        receivers:
        - otlp
      metrics:
        exporters:
        - logging
        processors:
        - memory_limiter
        - batch
        receivers:
        - otlp
        - prometheus
      traces:
        exporters:
        - logging
        - datadog
        processors:
        - memory_limiter
        - batch
        receivers:
        - otlp
        - jaeger
        - zipkin
    telemetry:
      metrics:
        address: ${MY_POD_IP}:8888
configMap:
  create: true
dnsPolicy: ""
extraContainers: []
extraEnvs:
- name: DD_API_KEY
  valueFrom:
    secretKeyRef:
      key: api-key
      name: datadog
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
hostNetwork: false
image:
  digest: ""
  pullPolicy: IfNotPresent
  repository: otel/opentelemetry-collector-contrib
  tag: ""
imagePullSecrets: []
ingress:
  additionalIngresses: []
  enabled: false
initContainers: []
lifecycleHooks: {}
mode: deployment
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podDisruptionBudget:
  enabled: true
  minAvailable: 2
podLabels: {}
podMonitor:
  enabled: false
  extraLabels: {}
  metricsEndpoints:
  - port: metrics
podSecurityContext: {}
ports:
  jaeger-compact:
    containerPort: 6831
    enabled: true
    hostPort: 6831
    protocol: UDP
    servicePort: 6831
  jaeger-grpc:
    containerPort: 14250
    enabled: true
    hostPort: 14250
    protocol: TCP
    servicePort: 14250
  jaeger-thrift:
    containerPort: 14268
    enabled: true
    hostPort: 14268
    protocol: TCP
    servicePort: 14268
  metrics:
    containerPort: 8888
    enabled: false
    protocol: TCP
    servicePort: 8888
  otlp:
    appProtocol: grpc
    containerPort: 4317
    enabled: true
    hostPort: 4317
    protocol: TCP
    servicePort: 4317
  otlp-http:
    containerPort: 4318
    enabled: true
    hostPort: 4318
    protocol: TCP
    servicePort: 4318
  zipkin:
    containerPort: 9411
    enabled: true
    hostPort: 9411
    protocol: TCP
    servicePort: 9411
presets:
  clusterMetrics:
    enabled: false
  hostMetrics:
    enabled: false
  kubeletMetrics:
    enabled: false
  kubernetesAttributes:
    enabled: true
  logsCollection:
    enabled: false
    includeCollectorLogs: false
    storeCheckpoints: false
priorityClassName: ""
prometheusRule:
  defaultRules:
    enabled: false
  enabled: false
  extraLabels: {}
  groups: []
replicaCount: 2
resources:
  limits:
    cpu: 256m
    memory: 512Mi
rollout:
  rollingUpdate: {}
  strategy: RollingUpdate
securityContext: {}
service:
  annotations: {}
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
  name: ""
serviceMonitor:
  enabled: false
  extraLabels: {}
  metricsEndpoints:
  - port: metrics
statefulset:
  podManagementPolicy: Parallel
  volumeClaimTemplates: []
tolerations: []
